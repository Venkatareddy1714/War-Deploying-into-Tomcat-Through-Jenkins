pipeline {
    agent any

    tools {
        maven 'maven-3.8.1'  // exact match with Global Tool name
    }

    parameters {
        booleanParam(name: 'DEPLOY_TOMCAT1', defaultValue: true, description: 'Deploy to Tomcat1')
        booleanParam(name: 'DEPLOY_TOMCAT2', defaultValue: true, description: 'Deploy to Tomcat2')
    }

    environment {
        WAR_FILE = "target/NETFLIX-1.2.2.war"
        WAR_NAME = "NETFLIX.war"
        TOMCAT_USER = "ec2-user"
        DEPLOY_PATH = "/home/ec2-user/apache-tomcat-9.0.105/webapps"
        SSH_CREDENTIALS_ID = "4625fa9e-686d-4461-a71e-5c63417a893c"
        DEPLOY_CONTEXT = "NETFLIX"
    }

    stages {
        stage('Checkout & Build WAR') {
            steps {
                git 'https://github.com/Venkatareddy1714/jenkins-java-project123.git'
                sh 'mvn clean package'
            }
        }

        stage('Load IPs') {
            steps {
                withCredentials([
                    string(credentialsId: 'tomcat1-ip', variable: 'IP1'),
                    string(credentialsId: 'tomcat2-ip', variable: 'IP2')
                ]) {
                    script {
                        env.TOMCAT1_IP = "${IP1}"
                        env.TOMCAT2_IP = "${IP2}"
                       echo "TOMCAT1_IP loaded: ${env.TOMCAT1_IP}"
                       echo "TOMCAT2_IP loaded: ${env.TOMCAT2_IP}"

                    }
                }
            }
        }

        stage('Verify SSH Connections') {
            steps {
                script {
                    withCredentials([sshUserPrivateKey(
                        credentialsId: env.SSH_CREDENTIALS_ID,
                        keyFileVariable: 'SSH_KEY_PATH',
                        usernameVariable: 'SSH_USER'
                    )]) {
                        if (params.DEPLOY_TOMCAT1) {
                            sh "ssh -o StrictHostKeyChecking=no -i \$SSH_KEY_PATH \$SSH_USER@${env.TOMCAT1_IP} 'echo Connected to Tomcat1'"
                        }
                        if (params.DEPLOY_TOMCAT2) {
                            sh "ssh -o StrictHostKeyChecking=no -i \$SSH_KEY_PATH \$SSH_USER@${env.TOMCAT2_IP} 'echo Connected to Tomcat2'"
                        }
                    }
                }
            }
        }

        stage('Deploy WAR') {
            steps {
                script {
                    withCredentials([sshUserPrivateKey(
                        credentialsId: env.SSH_CREDENTIALS_ID,
                        keyFileVariable: 'SSH_KEY_PATH',
                        usernameVariable: 'SSH_USER'
                    )]) {
                        if (params.DEPLOY_TOMCAT1) {
                            sh "scp -o StrictHostKeyChecking=no -i \$SSH_KEY_PATH ${env.WAR_FILE} \$SSH_USER@${env.TOMCAT1_IP}:${env.DEPLOY_PATH}/${env.WAR_NAME}"
                        }
                        if (params.DEPLOY_TOMCAT2) {
                            sh "scp -o StrictHostKeyChecking=no -i \$SSH_KEY_PATH ${env.WAR_FILE} \$SSH_USER@${env.TOMCAT2_IP}:${env.DEPLOY_PATH}/${env.WAR_NAME}"
                        }
                    }
                }
            }
        }

        stage('Restart Tomcat') {
            steps {
                script {
                    withCredentials([sshUserPrivateKey(
                        credentialsId: env.SSH_CREDENTIALS_ID,
                        keyFileVariable: 'SSH_KEY_PATH',
                        usernameVariable: 'SSH_USER'
                    )]) {
                        def restartCmd = '''
                            sudo /home/ec2-user/apache-tomcat-9.0.105/bin/shutdown.sh || true
                            sleep 5
                            sudo /home/ec2-user/apache-tomcat-9.0.105/bin/startup.sh
                        '''
                        if (params.DEPLOY_TOMCAT1) {
                            sh "ssh -o StrictHostKeyChecking=no -i \$SSH_KEY_PATH \$SSH_USER@${env.TOMCAT1_IP} '${restartCmd}'"
                        }
                        if (params.DEPLOY_TOMCAT2) {
                            sh "ssh -o StrictHostKeyChecking=no -i \$SSH_KEY_PATH \$SSH_USER@${env.TOMCAT2_IP} '${restartCmd}'"
                        }
                    }
                }
            }
        }

        stage('Verify Deployment') {
            steps {
                script {
                    if (params.DEPLOY_TOMCAT1) {
                        echo "Checking app on Tomcat1..."
                        sh "curl -s -o /dev/null -w '%{http_code}' http://${env.TOMCAT1_IP}:8080/${env.DEPLOY_CONTEXT}/ || echo 'Tomcat1 not reachable'"
                    }
                    if (params.DEPLOY_TOMCAT2) {
                        echo "Checking app on Tomcat2..."
                        sh "curl -s -o /dev/null -w '%{http_code}' http://${env.TOMCAT2_IP}:8080/${env.DEPLOY_CONTEXT}/ || echo 'Tomcat2 not reachable'"
                    }
                }
            }
        }
    }
}
